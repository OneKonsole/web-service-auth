apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authentification-service.fullname" . }}
  labels:
    {{- include "authentification-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "authentification-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "authentification-service.labels" . | nindent 8 }}
 {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "authentification-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PORT
              value: "{{ .Values.env.port }}"
            - name: DB_USERNAME
              value: "{{ .Values.env.db_username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.env.db_password }}"
            - name: DB_HOST
              value: "{{ .Values.env.db_host }}"
            - name: DB_NAME
              value: "{{ .Values.env.db_name }}"
            - name: JWT_SECRET
              value: "{{ .Values.env.jwt_secret }}"
            - name: JWT_EXPIRATION
              value: "{{ .Values.env.jwt_expiration }}"
            - name: KEYCLOAK_REALM
              value: "{{ .Values.env.keycloak_realm }}"
            - name: KEYCLOAK_SERVER_URL
              value: "{{ .Values.env.keycloak_server_url }}"
            - name: KEYCLOAK_CLIENT_ID
              value: "{{ .Values.env.keycloak_client_id }}"
            - name: KEYCLOAK_CLIENT_SECRET
              value: "{{ .Values.env.keycloak_client_secret }}"
            - name: KEYCLOAK_ADMIN_USERNAME
              value: "{{ .Values.env.keycloak_admin_username }}"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "{{ .Values.env.keycloak_admin_password }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.http }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.service.ports.https }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
